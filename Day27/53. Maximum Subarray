53. Maximum Subarray
Link: https://leetcode.com/problems/maximum-subarray/description/

class Solution {
    public int maxSubArray(int[] nums) {
        int maxAns = nums[0], sum = nums[0];
        for(int i = 1; i < nums.length; i++){
            sum = Math.max(nums[i], sum + nums[i]); // extend or restart
            maxAns = Math.max(maxAns, sum); // update global best
            
        }
        return maxAns;
    }
}

class Solution {
    public int maxSubArray(int[] nums) {
        // from kama
        if(nums.length == 1){
            return nums[0];
        }

        int sum = Integer.MIN_VALUE;
        int count = 0;
        for(int i = 0; i < nums.length; i++){
            count += nums[i];
            sum = Math.max(sum, count);
            if(count <= 0){
                count = 0;
            }
        }
        return sum;
    }
}
