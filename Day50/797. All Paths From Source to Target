797. All Paths From Source to Target
Link: https://leetcode.com/problems/all-paths-from-source-to-target/

class Solution {
    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> path = new ArrayList<>();
        path.add(0); // start from node 0
        dfs(graph, 0, path, result);
        return result;
    }

    private void dfs(int[][] graph, int node, List<Integer> path, List<List<Integer>> result){
        int n = graph.length;
        if(node == n - 1){ // reached target
            result.add(new ArrayList<>(path));
            return;
        }

        for(int next : graph[node]){
            path.add(next);
            dfs(graph, next, path, result);
            path.remove(path.size() - 1);
        }
    }
}
