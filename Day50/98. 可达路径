98. 可达路径
题目描述
给定一个有 n 个节点的有向无环图，节点编号从 1 到 n。请编写一个函数，找出并返回所有从节点 1 到节点 n 的路径。每条路径应以节点编号的列表形式表示。
输入描述
第一行包含两个整数 N，M，表示图中拥有 N 个节点，M 条边

后续 M 行，每行包含两个整数 s 和 t，表示图中的 s 节点与 t 节点中有一条路径

输出描述
输出所有的可达路径，路径中所有节点之间空格隔开，每条路径独占一行，存在多条路径，路径输出的顺序可任意。如果不存在任何一条路径，则输出 -1。

注意输出的序列中，最后一个节点后面没有空格！ 例如正确的答案是 1 3 5,而不是 1 3 5 ， 5后面没有空格！

输入示例
5 5
1 3
3 5
1 2
2 4
4 5
输出示例
1 3 5
1 2 4 5
提示信息


用例解释：

有五个节点，其中的从 1 到达 5 的路径有两个，分别是 1 -> 3 -> 5 和 1 -> 2 -> 4 -> 5。

因为拥有多条路径，所以输出结果为：

1 3 5
1 2 4 5

或

1 2 4 5
1 3 5
都算正确。


数据范围：

图中不存在自环
图中不存在平行边
1 <= N <= 100
1 <= M <= 500


import java.util.*;

public class Main {
    static List<List<Integer>> result = new ArrayList<>();
    static List<Integer> path = new ArrayList<>();
    static List<List<Integer>> graph = new ArrayList<>();
    static int n;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        int m = sc.nextInt();

        // 初始化邻接表
        for (int i = 0; i <= n; i++) {
            graph.add(new ArrayList<>());
        }

        // 读入边
        for (int i = 0; i < m; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
            graph.get(u).add(v);
        }

        // DFS 从节点 1 出发
        path.add(1);
        dfs(1);

        // 输出结果
        if (result.isEmpty()) {
            System.out.println(-1);
        } else {
            for (List<Integer> p : result) {
                for (int i = 0; i < p.size(); i++) {
                    if (i > 0) System.out.print(" ");
                    System.out.print(p.get(i));
                }
                System.out.println();
            }
        }
    }

    // 深度优先搜索
    private static void dfs(int node) {
        if (node == n) { // 到达目标节点
            result.add(new ArrayList<>(path));
            return;
        }

        for (int next : graph.get(node)) {
            path.add(next);
            dfs(next);
            path.remove(path.size() - 1); // 回溯
        }
    }
}

代码说明：
使用 graph 邻接表存储有向边。

从节点 1 出发进行 DFS，路径保存在 path。

当到达节点 n 时，把路径复制到 result 中。

最后输出所有路径，如果没有路径输出 -1。


