72. Edit Distance
Link: https://leetcode.com/problems/edit-distance/description/

class Solution {
    public int minDistance(String word1, String word2) {
        int m = word1.length();
        int n = word2.length();
        int[][] dp = new int[m + 1][n + 1];

        // Base case
        for(int i = 0; i <= m; i++) dp[i][0] = i; // delete all from word1
        for(int j = 0; j <= n; j++) dp[0][j] = j; // delete all from word2

        for(int i = 1; i <= m; i++){
            for(int j = 1; j <= n; j++){
                if(word1.charAt(i - 1) == word2.charAt(j - 1)){
                    dp[i][j] = dp[i - 1][j - 1]; // no operation needed
                }else{
                    dp[i][j] = 1 + Math.min(dp[i - 1][j - 1], // replace
                    Math.min(dp[i -1][j], dp[i][j - 1])); // delete or insert
                }
            }
        }
        return dp[m][n];
    }
}
