56. Merge Intervals
Link: https://leetcode.com/problems/merge-intervals/description/

class Solution {
    public int[][] merge(int[][] intervals) {
        if(intervals.length <= 1){
            return intervals;
        }

        // sort by start time
        Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0]));

        List<int[]> result = new ArrayList<>();
        int[] current = intervals[0];

        // merge intervals
        for(int i = 1; i < intervals.length; i++){
            if(intervals[i][0] <= current[1]){
                // overlap -> merge
                current[1] = Math.max(current[1], intervals[i][1]);
            }else{
                // no overlap -> add current to result
                result.add(current);
                current = intervals[i];
            }
        }
        // add last interval
        result.add(current);

        return result.toArray(new int[result.size()][]);
    }
}
