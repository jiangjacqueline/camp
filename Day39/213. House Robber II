213. House Robber II
Link: https://leetcode.com/problems/house-robber-ii/description/

class Solution {
    public int rob(int[] nums) {
        int n = nums.length;
        if(nums == null || n == 0) return 0;
        if(n == 1) return nums[0]; // Only the house
        if(n == 2) return Math.max(nums[0], nums[1]); // two house, pick max

        // case 1: exclude last house
        int case1 = robLinear(nums, 0, n - 2);
        // case 2: exclude first house
        int case2 = robLinear(nums, 1, n - 1);

        return Math.max(case1, case2);
    }

    private int robLinear(int[]nums, int start, int end){
        int x = 0, y = 0;
        for(int i = start; i <= end; i++){
            int z = Math.max(x, y + nums[i]);
            y = x;
            x = z;
        }
        return x;
    }
}
